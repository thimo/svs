/ TODO by default only show for current season, add links to show for previous season
- active_tab = Comment.active_tab(current_user, parent, params[:comment])
- allow_create = policy(Comment.new(commentable: parent)).create?

section
  ul.nav.nav-tabs.nav-tabs-scroll[role="tablist"]
    - comment_types_for(parent).each do |comment_type, comment_type_id|
      - is_active = comment_type == active_tab
      li.nav-item
        a.nav-link[
          href="#comments-tab-#{comment_type}"
          role="tab"
          data-toggle="tab"
          data-tab="#{comment_type}"
          aria-expanded="#{is_active}"
          class="#{'active' if is_active}"
          data-set-active-tab-url="#{url_for [:set_active_tab, :comments]}"
          data-controller='comment-tab'
          data-action="comment-tab#activateTab"
        ]
          = Comment.comment_types_i18n[comment_type]
          - if (count = comments_for(parent, comment_type).size) > 0
            .badge.badge-pill.badge-secondary.ml-1
              = count

  .tab-content
    - comment_types_for(parent).each do |comment_type, comment_type_id|
      - is_active = comment_type == active_tab
      .tab-pane[role="tabpanel" aria-expanded="#{is_active}" id="comments-tab-#{comment_type}" class="#{is_active ? 'active in' : 'fade'}"]
        - if allow_create && parent.class.comment_types.key?(comment_type)
          = bootstrap_form_for [parent, Comment.new], html: { class: 'pb-3' } do |f|
            = f.text_area :body, hide_label: true, placeholder: t(".#{comment_type}_placeholder"), rows: 1, wrapper: { class: 'mb-1' }
            = f.hidden_field :comment_type, value: comment_type
            = f.submit "Toevoegen", class: 'btn btn-primary btn-sm float-right'
            / small.form-text.text-muted.pt-0
            /   | Tip: beperk je opmerking tot feiten, vermijdt meningen en oordelen

            small.form-text.text-muted.pt-0
              = t(".#{comment_type}_visible_for")


        div.mb-2
          - if parent.is_a? Team
            = link_to [:toggle_include_member, parent, :comments, comment: comment_type],
              remote: true,
              method: :post do
              .custom-control.custom-checkbox.light
                input.custom-control-input[type="checkbox" checked=current_user.setting(:include_member_comments)]
                label.custom-control-label
                  | Inclusief teamleden (seizoen #{parent.season.name})


        - if (comments = comments_for(parent, comment_type)).present?
          = render comments, parent: parent
        - else
          i Geen opmerkingen gevonden
