/ TODO let controller play a role in (pre) selecting comments
section.tabs-section
  .tabs-section-nav
    .tbl
      ul.nav[role="tablist"]
        - parent.comment_types.each do |comment_type, comment_type_id|
          - if policy(Comment).public_send("show_#{comment_type}?")
            li.nav-item
              - is_active = params[:comment].present? ? comment_type == params[:comment] : comment_type == 'generic'
              a.nav-link[href="#comments-tab-#{comment_type}" role="tab" data-toggle="tab" aria-expanded="#{is_active}" class="#{'active' if is_active}"]
                span.nav-link-in
                  = Comment.comment_types_i18n[comment_type]
                  - if (count = parent.comments.public_send(comment_type).size) > 0
                    .label.ml-1
                      = count
  .tab-content
    - parent.comment_types.each do |comment_type, comment_type_id|
      - if policy(Comment).public_send("show_#{comment_type}?")
        - is_active = params[:comment].present? ? comment_type == params[:comment] : comment_type == 'generic'
        .tab-pane[role="tabpanel" aria-expanded="#{is_active}" id="comments-tab-#{comment_type}" class="#{is_active ? 'active in' : 'fade'}"]
          = simple_form_for [parent, Comment.new], html: { class: 'clearfix pb-2' } do |f|
            = f.input :body, label: false, placeholder: "Opmerking", wrapper_html: { class: 'mb-1' }, input_html: { rows: 1 }
            = f.button :submit, "Toevoegen", class: 'btn btn-primary btn-sm float-right'
            = f.hidden_field :comment_type, value: comment_type

          / TODO cleanup this link_to
          / TODO only show for team comments
          = link_to "- #{current_user.settings.include_member_comments}", [:toggle_include_member, parent, :comments, comment: comment_type],
            remote: true,
            method: :post,
            id: "#{comment_type}-toggle-link",
            data: { after_toggle_url: "#{url_for [parent, :comments]}" },
            class: 'include-member-comments-link'

          - if (comments = policy_scope(parent.comments).public_send(comment_type).includes(:user)).present?
            = render comments
          - else
            i Voeg een opmerking toe
