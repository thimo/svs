/ TODO move code to helper/controller
- presentables = team.send(presentable_class.model_name.plural).in_past.active.left_outer_joins(:presences).where('presences.id IS NOT NULL').distinct.desc
- if presentables&.any?
  .card-body.table-responsive
    - ids = presentables.map(&:id)
    table.table.table-xxs.presences
      thead
        tr
          th.w-1
          - presentables.each do |presentable|
            th.rotate.w-1.small
              div
                = "#{l(presentable.started_at, format: :weekday)} #{l(presentable.started_at, format: :date_short)}"
          th
          th

      tbody
        - team.team_members.player.asc.each do |team_member|
          - member = team_member.member
          - presences = member.presences.send("for_#{presentable_class.model_name.singular}", ids).inject({}) { |r, presence| r.merge!({presence.presentable_id => presence})}
          tr
            - presence_count = 0
            td.nowrap
              = link_to member.name, member
            - presentables.each do |presentable|
              td
                - if presences.has_key? presentable.id
                  - if presences[presentable.id].is_present
                    - title = [presences[presentable.id].on_time_i18n, presences[presentable.id].remark].reject(&:blank?).join(' - ')
                    i.fa.fa-check.color-green[title="#{title}"]
                    - presence_count += 1
                  - else
                    - title = [presences[presentable.id].signed_off_i18n, presences[presentable.id].remark].reject(&:blank?).join(' - ')
                    i.fa.fa-times.color-red[title="#{title}"]
                - else
                  i.fa-minus.color-gray[class=fa_class]
            td.w-1.text-right.light
              = presence_count
            td

      tfooter
        tr
          th
          - presentables.each do |presentable|
            th.text-right
              = presentable.presences.present.size
          th
