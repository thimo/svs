= simple_form_for [@team, @team_evaluation], {wrapper: :horizontal_form} do |f|
  = f.error_notification
  / - if @team_evaluation.errors.any?
  /   ul
  /     - @team_evaluation.errors.full_messages.each do |msg|
  /       li = msg

  section.box-typical
    header.box-typical-header
      .tbl-row
        .tbl-cell.tbl-cell-title
          .strong
            | Teamevaluatie #{@team_evaluation.team.name}
            - if @team_evaluation.team.division.present?
              small.pl-1 #{@team_evaluation.team.division}
            div.color-blue-grey-lighter.small
              = l @team_evaluation.created_at.to_date, format: :long unless @team_evaluation.new_record?
              |  - 
              = @team_evaluation.status
        .tbl-cell.text-right
          = link_to "/pdf/ESA_TeamPlan_Handleiding_Teamevaluaties.pdf", target: "_blank" do
            i.fa.fa-book.pr-1
            | Handleiding
        - if policy(@team_evaluation).destroy?
          .tbl-cell.tbl-cell-action-bordered
            = link_to team_evaluation_path(@team_evaluation),  method: :delete, data: { confirm: 'Teamevaluatie wordt verwijderd. Doorgaan?' }, title: "Teamevaluatie verwijderen", class: "action-btn"
              i.fa.fa-trash-o
        
    .box-typical-body
      table.table.table-striped.table-xxs
        thead
          tr
            th
              div
                span
                  | Speler
                  
            = render "player_evaluations/th_columns"
            
        tbody
          = f.simple_fields_for :player_evaluations do |pe|
            = pe.hidden_field :id
            = pe.hidden_field :team_member_id
            
            = render "inbetween_header" if pe.index > 0 && pe.index % 4 == 0

            tr
              td.member-name[class="#{'line-through' if pe.object.team_member.archived?}"]
                - member = pe.object.team_member.member
                = link_to member.name, member, target: "_blank"
                .color-blue-grey-lighter.small
                  => l member.born_on, format: :long unless member.born_on.nil?
                  = "(#{member.gender})"
              
              td.field-positions
                div[class="#{'form-control-error' if pe.error("field_positions").present?}"]
                  = pe.simple_fields_for :team_member, pe.object.team_member do |tm|
                    = tm.select :field_position_ids, options_for_select(FieldPosition.options_for_select, tm.object.field_positions.map(&:id)), {include_blank: true}, {class: "field_positions", multiple: "multiple"}
                    
              td.prefered-foot
                = pe.select :prefered_foot, options_for_select(TeamMember::PREFERED_FOOT_OPTIONS, pe.object.prefered_foot), {include_blank: true}, {class: "form-control custom-select #{'form-control-error' if pe.error(:prefered_foot).present?}", title: TeamMember.human_attribute_name(:prefered_foot)}
              
              - PlayerEvaluation::RATING_FIELDS.each do |field_name|
                td.evaluation-rating
                  = pe.select field_name.to_s, PlayerEvaluation::RATING_OPTIONS, {include_blank: true}, {class: "form-control custom-select evaluation-rating #{'form-control-error' if pe.error(field_name.to_s).present?}", title: PlayerEvaluation.human_attribute_name(field_name)}
                
              td.advise-next-season
                = pe.select :advise_next_season, PlayerEvaluation::ADVISE_NEXT_SEASON_OPTIONS, {include_blank: true}, {class: "form-control custom-select #{'form-control-error' if pe.error(:advise_next_season).present?}", title: PlayerEvaluation.human_attribute_name(:advise_next_season)}
                
              td.remark
                = pe.text_area :remark, {class: "form-control"}

    footer.box-typical-footer
      - if policy(@team_evaluation).update?
        = f.button :submit, "Opslaan", name: "save_and_stay_open", class: 'btn btn-primary btn-inline'
        = f.button :submit, "Opslaan en Sluiten", name: "save", class: 'btn btn-inline'
      - if policy(@team_evaluation).send_invite?
        = f.button :submit, "Uitnodiging versturen", name: "send_invite", class: 'btn btn-inline'
      - if policy(@team_evaluation).finish_evaluation?
        = f.button :submit, "Evaluatie afronden", name: "finish_evaluation", class: 'btn btn-inline'
      = link_to "Annuleren", @team_evaluation.new_record? ? @team : @team_evaluation.team, class: 'btn btn-secondary-outline btn-inline'
