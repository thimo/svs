- provide(:title, "Leeftijdsgroep #{@age_group.name}")
- provide(:subtitle, "#{year_of_birth_range(@age_group)}")

- content_for :action_buttons
  - if @age_group.teams.size > 0
    - if policy(TeamMember.new(team: @age_group.teams.first)).create?
      = link_to age_group_member_allocations_path(@age_group), title: "Spelersindeling", class: "btn"
        i.fa.far.fa-table
  - if policy(@age_group).update?
    = link_to edit_age_group_path(@age_group), title: "Leeftijdsgroep aanpassen", class: "btn"
      i.fa.far.fa-pencil
  - if policy(@age_group).destroy?
    = link_to age_group_path(@age_group),  method: :delete, data: { confirm: 'Leeftijdsgroep wordt verwijderd. Doorgaan?' }, title: "Leeftijdsgroep verwijderen", class: "btn"
      i.fa.far.fa-trash-alt
  .pl-3
  - if policy(Todo).create? && policy(@age_group).show_todos?
    = link_to new_age_group_todo_path(@age_group), title: "Todo toevoegen", class: "btn"
      i.fa.far.fa-check-square
  = render "shared/favorite", parent: @age_group, styleClass: "btn"

.row
  .col-xl-6
    .card
      .card-header
        | Teams
        .card-header-actions
          - if policy(@age_group).bulk_email?
            = link_to new_age_group_team_action_path(@age_group, type: :email), title: "Stuur e-mail aan teams", class: "card-header-action", remote: true
              i.fa.far.fa-envelope
          - if policy(@age_group).download_team_members?
            = link_to new_age_group_team_action_path(@age_group, type: :download_team_members), title: "Download teams naar Excel", class: "card-header-action", remote: true
              i.fa.far.fa-file-excel
          - if policy(Team.new(age_group: @age_group)).create?
            = link_to new_age_group_team_path(@age_group), title: "Team toevoegen", class: "card-header-action"
              i.fa.far.fa-file
          - if policy(Team.new(age_group: @age_group)).create?
            = link_to new_age_group_team_bulk_update_path(@age_group), title: "Teams toevoegen", class: "card-header-action"
              i.fa.far.fa-copy

      .card-body.p-0
        table.table.table-sm.tr-links
          tbody
            - @teams.each do |team|
              tr
                td
                  = link_to team.name, team
                  - if team.draft?
                    .light.small
                      = team.remark
                td
                  = team.division
                td.text-right
                  - if policy(team).show_status?
                    => team.status_to_badge.html_safe
                  - if policy_scope(team.team_members).size > 0
                    .badge.badge-secondary.badge-two-numbers>
                      = "#{policy_scope(team.team_members).active_for_team(team).player.size} / #{policy_scope(team.team_members).active_for_team(team).staff.pluck(:member_id).uniq.size}"

    - if @not_played_matches.any?
      .card.schedule-list
        .card-header
          | Programma

        .card-body
          table.table.table-sm.tr-links.align-top
            - @not_played_matches.each do |date, matches|
              tr
                td.strong[colspan="100"]
                  | #{l date, format: :weekday} #{l date, format: :date_long}
              = render partial: 'shared/match', collection: human_sort(matches, :team_name), cached: true

    - if @played_matches.any?
      .card.schedule-list
        .card-header
          | Uitslagen

        .card-body
          table.table.table-sm.tr-links.align-top
            - @played_matches.each do |date, matches|
              tr
                td.strong[colspan="100"]
                  | #{l date, format: :weekday} #{l date, format: :date_long}
              = render partial: 'shared/match', collection: human_sort(matches, :team_name), cached: true

  .col-xl-6
    - if policy(@age_group).show_available_members? && @available_members.present?
      = render "members/list", members: @available_members, title: "Wachtlijst"

    - if policy(@age_group).show_evaluations?
      / - if @open_team_evaluations.present?
      = render "team_evaluations/list", age_group: @age_group, team_evaluations: @open_team_evaluations, title: "Open teamevaluaties", hide_status: true, show_last_modified: true, show_progress: true, show_bulk_create: true
      - if @finished_team_evaluations.present?
        = render "team_evaluations/list", team_evaluations: @finished_team_evaluations, title: "Afgeronde teamevaluaties", hide_status: true, show_finished_by: true

    - if (policy(@age_group).show_injureds? && @injureds.any?)
      = render "injureds/list", injureds: @injureds

    - if policy(@age_group).show_todos? && (@todos_active.present? || @todos_defered.present?)
      = render "todos/list", todos_active: @todos_active, todos_defered: @todos_defered, new_path: new_age_group_todo_path(@age_group)
